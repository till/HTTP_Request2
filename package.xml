<?xml version="1.0" encoding="ISO-8859-1"?>
<package version="2.0"
 xmlns="http://pear.php.net/dtd/package-2.0"
 xmlns:tasks="http://pear.php.net/dtd/tasks-1.0"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:schemaLocation="http://pear.php.net/dtd/tasks-1.0 http://pear.php.net/dtd/tasks-1.0.xsd http://pear.php.net/dtd/package-2.0 http://pear.php.net/dtd/package-2.0.xsd">

  <name>HTTP_Request2</name>
  <channel>pear.php.net</channel>
  <extends>HTTP_Request</extends>
  <summary>Provides an easy way to perform HTTP requests.</summary>
  <description>
PHP5 rewrite of HTTP_Request package. Provides cleaner API and pluggable
Adapters. Currently available are:
  * Socket adapter, based on old HTTP_Request code,
  * Curl adapter, wraps around PHP's cURL extension,
  * Mock adapter, to use for testing packages dependent on HTTP_Request2.
Supports POST requests with data and file uploads, basic and digest 
authentication, cookies, proxies, gzip and deflate encodings, monitoring 
the request progress with Observers...
  </description>
  <lead>
    <name>Alexey Borzov</name>
    <user>avb</user>
    <email>avb@php.net</email>
    <active>yes</active>
  </lead>
  <date>2009-05-03</date>
  <version>
    <release>0.4.0</release>
    <api>0.4.0</api>
  </version>
  <stability>
    <release>alpha</release>
    <api>alpha</api>
  </stability>
  <license uri="http://opensource.org/licenses/bsd-license.php">BSD License</license>
  <notes>
 * Added 'store_body' config parameter, if set to false it will prevent storing
   the response body in Response object (request #15881)
 * HTTP_Request2::setHeader() method now works as documented, setHeader('name') 
   will remove the 'name' header, while setHeader('name', '') will set 'name'
   header to empty value (bug #15937)
 * Custom 'Host' header will not be overwritten by generated one (bug #16146)
 * When trying to reuse the connected socket in Socket adapter, make sure that
   it is still connected (bug #16149)
  </notes>
  <contents>
    <dir baseinstalldir="HTTP" name="/">
      <dir name="Request2">
        <dir name="Adapter">
          <file role="php" name="Curl.php">
            <tasks:replace from="@package_version@" to="version" type="package-info" />
          </file>
          <file role="php" name="Mock.php">
            <tasks:replace from="@package_version@" to="version" type="package-info" />
          </file>
          <file role="php" name="Socket.php">
            <tasks:replace from="@package_version@" to="version" type="package-info" />
          </file>
        </dir>
        <file role="php" name="Adapter.php">
          <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file role="php" name="Exception.php">
          <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file role="php" name="MultipartBody.php">
          <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <dir name="Observer">
          <file role="php" name="Log.php">
            <tasks:replace from="@package_version@" to="version" type="package-info" />
          </file>
        </dir>
        <file role="php" name="Response.php">
          <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
	  </dir>
      <dir name="tests">
        <dir name="_files">
		  <file role="test" name="bug_15305" />
		  <file role="test" name="empty.gif" />
		  <file role="test" name="plaintext.txt" />
		  <file role="test" name="response_cookies" />
		  <file role="test" name="response_deflate" />
		  <file role="test" name="response_gzip" />
		  <file role="test" name="response_gzip_broken" />
		  <file role="test" name="response_headers" />
        </dir>
        <dir name="Request2">
          <dir name="Adapter">
            <file role="test" name="AllTests.php" />
            <file role="test" name="MockTest.php" />
          </dir>
          <file role="test" name="AllTests.php" />
          <file role="test" name="MultipartBodyTest.php" />
          <file role="test" name="ResponseTest.php" />
        </dir>
        <file role="test" name="AllTests.php" />
        <file role="test" name="ObserverTest.php" />
        <file role="test" name="Request2Test.php" />
      </dir>
      <file role="php" name="Request2.php">
      	<tasks:replace from="@package_version@" to="version" type="package-info" />
      </file>
    </dir>
  </contents>
  <dependencies>
    <required>
      <php>
        <min>5.1.4</min>
      </php>
      <pearinstaller>
        <min>1.5.4</min>
      </pearinstaller>
      <package>
	    <name>Net_URL2</name>
	    <channel>pear.php.net</channel>
	    <min>0.2.0</min>
	  </package>
    </required>
    <optional>
      <extension>
	    <name>curl</name>
	  </extension>
	  <extension>
	    <name>fileinfo</name>
	  </extension>
	  <extension>
	    <name>zlib</name>
	  </extension>
    </optional>
  </dependencies>
  <phprelease />
    <changelog>
      <release>
      <version>
        <release>0.3.0</release>
        <api>0.3.0</api>
      </version>
      <stability>
        <release>alpha</release>
        <api>alpha</api>
      </stability>
      <date>2009-01-28</date>
      <license uri="http://opensource.org/licenses/bsd-license.php">BSD License</license>
      <notes>
 API changes:
  * Removed HTTP_Request2::getConfigValue() method

 Feature additions:
  * Added digest authentication (RFC 2617) support to Socket adapter. Thanks
    to Tom Snyder (tomsn at inetoffice dot com) who sent me a prototype
    implementation for HTTP_Request a couple of years ago.
  * Added HTTPS proxy support to Socket adapter, this works through CONNECT
    request described in RFC 2817.
  * Mock adapter can now throw an Exception instead of returning a response
    if Exception object is added via its addResponse() method (request #15629)

 Other changes and fixes:
  * Support RFC 3986 by not encoding '~' in POST body (request #15368)
  * Prevent an error with particular versions of PHP and Curl (bug #15617)
  * Regular expressions used in HTTP_Request2 are now class constants 
    (request #15630)
  * Curl adapter now throws an exception in case of malformed (non-HTTP) 
    response rather than dies with a fatal error (bug #15716)
  * Curl handle wasn't closed in Curl adapter in case of error (bug #15721)
  * Curl adapter sent an extra 'sentHeaders' event and returned bogus 
    response status when server returned 100-Continue response (bug #15785)
      </notes>
      </release>
      <release>
      <version>
        <release>0.2.0</release>
        <api>0.2.0</api>
      </version>
      <stability>
        <release>alpha</release>
        <api>alpha</api>
      </stability>
      <date>2009-01-07</date>
      <license uri="http://opensource.org/licenses/bsd-license.php">BSD License</license>
      <notes>
 API changes:
  * HTTP_Request2::getConfigValue() is deprecated and will be removed in next 
    release. Use HTTP_Request2::getConfig().
  * Changed HTTP_Request2::setConfig() to accept a pair of parameter name and
    parameter value in addition to array('parameter name' =&gt; 'value')
  * Added HTTP_Request2::getConfig() method that can return a single 
    configuration parameter or the whole configuration array

Other additions and changes:
  * Added a debug Observer that can log request progress to a file or an 
    instance of PEAR::Log (thanks to David Jean Louis, request #15424)
  * Added a new 'timeout' parameter that limits total number of seconds
    a request can take (see requests #5735 and #8964)
  * Added various SSL protocol options: 'ssl_verify_peer', 'ssl_verify_host',
    'ssl_cafile', 'ssl_capath', 'ssl_local_cert', 'ssl_passphrase'. Note that
    'ssl_verify_host' option behaves differently in Socket and Curl Adapters:
    http://bugs.php.net/bug.php?id=47030

Fixes:
  * Fixed 'data error' when processing response encoded by 'deflate'
    encoding (bug #15305)
  * Curl Adapter now passes full request headers in 'sentHeaders' event
      </notes>
	  </release>
      <release>
      <version>
        <release>0.1.0</release>
        <api>0.1.0</api>
      </version>
      <stability>
        <release>alpha</release>
        <api>alpha</api>
      </stability>
      <date>2008-11-17</date>
      <license uri="http://opensource.org/licenses/bsd-license.php">BSD License</license>
      <notes>
Initial release. The features supported are mostly the same as those of
HTTP_Request, with the following additional feature requests implemented:
  * cURL extension support (request #5463)
  * It is now possible to monitor the file upload progress with Observers
	(request #7630)
  * Added 'sentHeaders' notification providing the request headers to the
    Observers (request #7633)
  * Added support for 'deflate' encoding (request #11246)
      </notes>
    </release>
  </changelog>
</package>